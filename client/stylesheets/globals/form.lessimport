/* Generic Spacing */
/* Wrap in <fieldset> or add class .fieldset */
fieldset,
.fieldset {
  .clearfix;
  padding-top: 1.5em;
  padding-bottom: 1.5em;

  //spacing between fieldsets (can't use margins because of border)
  & + fieldset,
  & + .fieldset {
    border-top: 1px solid @color-medium-rare;
  }

  > input:not([type="checkbox"]):not([type="radio"]),
  > textarea,
  > label.checkbox,
  > label.radio,
  > .a-select,
  > .input-symbol {
    // direct descendents only, custom layouts are wrapped in .fieldset-group
    display: block;
    margin-bottom: .5rem;
    width: 100%;

    &:last-child { margin-bottom: 0; }
  }
  textarea {
    min-height: 7em;
  }
  [class^="btn-"],
  [class*=" btn-"],
  .a-select,
  .a-select select {
    width: 100%;
  }

  label:not(.checkbox):not(.radio) {
    .type-bold;
  }
  .checkbox {
    .font-s1;
    margin-bottom: 1rem;
  }
  .fieldset-group {
    margin-bottom: 1rem;
  }
}


/* Generic */
legend {
  .font-s2;
  .section-subtitle(@color-well);
  float: left;
  margin-bottom: 1em;
  width: 100%; //needed due to special browser rendering of this element
}

label {
  .font-s2;
  clear: both;
  display: block;
  margin-bottom: .5em;
  &.checkbox,
  &.radio {
    cursor: pointer;
    min-height: 1em;
    position: relative; //necessary for special styling
    & + button {
      /* accounts for 4px margin bottom to = 16px */
      margin-top: 12px;
    }
  }
  &.checkbox.empty {
    //when the checkbox has no accompanying text
    display: inline-block;
    line-height: 1em + .3em; //.3em is due to inherited top positioning
  }
  >.alert,
  >.error {
    .type-regular;
    color: @color-negative;
    &:before { content: ' ';}
  }
}

/* Input styles */
input:not([type="checkbox"]):not([type="radio"]) {
  padding: .375em .75em; //more compact buttons
  line-height: 1.5em !important;
  @media screen and (min-width: 40em) {
    padding: .375em 1em;
  }
}

input:not([type="checkbox"]):not([type="radio"]),
textarea {
  .placeholder(@color-medium);
  .font-s2;
  @media screen and (min-width: 40em) { .font-s3; }
  //do not add a transition; it causes a focus bug in iOS

  padding: .75em 0; //total height ~48

  background: transparent;
  box-shadow: rgba(0,0,0,.2) 0 -1px 0 0 inset;
  border:none;
  box-sizing: border-box;
  outline: none;

  &[disabled] {
  	background: rgba(255,255,255,.5);
	}

  &:active,
  &:focus {
    box-shadow: rgba(0,0,0,.5) 0 -1px 0 0 inset;
  }
  /* Alerts */
  &.alert {
    box-shadow: @color-negative 0 -1px 0 0 inset;
  }
}

/* Styles for inputs with icons inside of them, see styleguide for markup */
.input-symbol {
  display: inline-block;
  position: relative;

  //need to replicate sizing from std inputs to ensure accurate spacing for icons
  .font-s2;
  @media screen and (min-width: 40em) { .font-s3; }

  //icon position and padding for input
  &.left {
    > [class^="icon-"], > [class*=" icon-"] {
      left: 1.4em/2;
    }
    > input,
    > .pseudo-input {
      padding-left: 2.5em !important;
    }
  }

  > input, > button, > .pseudo-input {
    width: 100%;
  }
  > [class^="icon-"], > [class*=" icon-"] {
    background: transparent;
    color: @color-medium;
    font-size: 1.125em;
    height: 1em;
    position: absolute;
    top: 50%;

    width: 1em;
    .transform(translateY(-50%));
    .transition( all 100ms ease-in );
  }
}




// a form input with no chrome at all (ie. appears just as text)
// search overlay page
input[type="text"],
input[type="search"],
input[type="email"],
textarea {
  &.nochrome {
    padding: 0;
    border: none;
    box-shadow: none;
    background: none;
    outline: none;
    &:focus, &:active, &:hover {
      box-shadow: none;
    }
  }

}